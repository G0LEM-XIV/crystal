name: ci

on: [ push, pull_request ]

jobs:
  build-test:
    name: Test on PHP ${{ matrix.php-versions }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        php-versions: [ '7.2', '7.3', '7.4', '8.0' ]

    services:
      mydb:
        image: mysql:5.7
        env:
          MYSQL_HOST: 127.0.0.1
          MYSQL_DB: test
          MYSQL_USER: crystal
          MYSQL_PASSWORD: crystal
          MYSQL_ROOT_PASSWORD: crystal
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=5

    steps:
      - name: Verify MySQL connection from container
        run: |
          sudo /etc/init.d/mysql start
          mysql --host mydb -ucrystal -pcrystal -e "CREATE DATABASE test;"
          mysql --host mydb -ucrystal -pcrystal -e "SHOW DATABASES"
          mysql --host mydb -ucrystal -pcrystal test < migration/schema.sql

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: pcntl, pdo
          coverage: none

      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v2
        with:
            path: ${{ steps.composer-cache.outputs.dir }}
            key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
            restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Test with phpunit
        run: vendor/bin/phpunit
